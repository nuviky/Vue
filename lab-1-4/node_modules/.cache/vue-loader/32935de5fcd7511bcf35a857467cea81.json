{"remainingRequest":"C:\\Users\\nuvik\\Desktop\\VueJS-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\nuvik\\Desktop\\VueJS-main\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\nuvik\\Desktop\\VueJS-main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\nuvik\\Desktop\\VueJS-main\\src\\components\\Education.vue?vue&type=template&id=2a424ba8&scoped=true&","dependencies":[{"path":"C:\\Users\\nuvik\\Desktop\\VueJS-main\\src\\components\\Education.vue","mtime":1641637622000},{"path":"C:\\Users\\nuvik\\Desktop\\VueJS-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuvik\\Desktop\\VueJS-main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\nuvik\\Desktop\\VueJS-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\nuvik\\Desktop\\VueJS-main\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}